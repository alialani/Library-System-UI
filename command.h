#pragma once

#include "patron.h"
#include "itemtree.h"
#include "itemfactory.h"
#include <iomanip>

//-----------------------------------------------------------------------------
// Command is an object that has a particular performance within the 
// library system.  
class Command {
	protected:
		ItemFactory itemFactory;
		
		
	public:

//*****************************************************************Command()****************************************************************************
// Default constructor
//******************************************************************************************************************************************************
		Command();


//******************************************************************~Command()**************************************************************************
// Destructor
//******************************************************************************************************************************************************
		virtual ~Command();


//******************************************************************create()****************************************************************************
// Creates and return a Command* to a new display command object
//******************************************************************************************************************************************************
		virtual Command* create() =0;


//******************************************************execute()**************************************************************************************
// is a bool pure virtual function used to execute each commands
//******************************************************************************************************************************************************
		virtual bool execute(ItemTree* [], Patron* [], istream&) =0;
};

