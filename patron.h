#pragma once

#include "patronhistory.h"
#include <iostream>
#include <string>


//-----------------------------------------------------------------------------
// A Patron object is data relating to a patron of the library system.  It
// stores the patron's 4-digit account ID and his/her history of rented items.
// The user can retrieve the Patron's account ID, his/her name, and his/her
// history.
class Patron {
	private:
		int id;
		PatronHistory *history;
		string firstName;
		string lastName;
		
	public:

//*****************************************************************Patron()*****************************************************************************
// Constructor to initialize Patron's data
//******************************************************************************************************************************************************
		Patron(int id, string first, string last);


//****************************************************************~Patron()*****************************************************************************
// Destructor deallocate allocated memory using deletePatronHistory()
//******************************************************************************************************************************************************
		~Patron();	


//***********************************************************deletePatronHistory()**********************************************************************
// Deallocate allocated memory using deleteHistory() defined in PatronHistory() class
//******************************************************************************************************************************************************
		void deletePatronHistory();



//********************************************************************getHistory()**********************************************************************
// Return PatronHistory* history
//******************************************************************************************************************************************************		
		PatronHistory* getHistory();


//*****************************************************************setHistory()*************************************************************************
// set PatronHistory* History to whatever passed
//******************************************************************************************************************************************************
		void setHistory(PatronHistory* newHistory );
	

//*********************************************************************display()************************************************************************
// Displays patrons data with the required sort
//******************************************************************************************************************************************************
		void display() const;
};

