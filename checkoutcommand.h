#pragma once

#include "command.h"

//-----------------------------------------------------------------------------
// A CheckoutCommand object has the sole function of checking out an item. and requires a Patron object
// and an ItemTree object and the istream& file in order to execute.
class CheckoutCommand : public Command {
	public:

//************************************************************CheckoutCommand()*************************************************************************
// Default constructor
//******************************************************************************************************************************************************
		CheckoutCommand();


//************************************************************CheckoutCommand()*************************************************************************
// Destructor
//******************************************************************************************************************************************************
		~CheckoutCommand();

	
//******************************************************CheckoutCommand::execute()**********************************************************************
// is a bool pure virtual function from class command returns true when excute the checkout command
//******************************************************************************************************************************************************
		virtual bool execute(ItemTree* [], Patron* [], istream&);


//******************************************************************create()****************************************************************************
// Creates and return a Command* to a new checkout command object
//******************************************************************************************************************************************************
		virtual Command* create();		
};



